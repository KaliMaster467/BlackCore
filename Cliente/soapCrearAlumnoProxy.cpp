/* soapCrearAlumnoProxy.cpp
   Generated by gSOAP 2.8.36 for CrearAlumno.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapCrearAlumnoProxy.h"

CrearAlumnoProxy::CrearAlumnoProxy() : soap(SOAP_IO_DEFAULT)
{	CrearAlumnoProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

CrearAlumnoProxy::CrearAlumnoProxy(const CrearAlumnoProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
}

CrearAlumnoProxy::CrearAlumnoProxy(const struct soap &_soap) : soap(_soap)
{ }

CrearAlumnoProxy::CrearAlumnoProxy(const char *endpoint) : soap(SOAP_IO_DEFAULT)
{	CrearAlumnoProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

CrearAlumnoProxy::CrearAlumnoProxy(soap_mode iomode) : soap(iomode)
{	CrearAlumnoProxy_init(iomode, iomode);
}

CrearAlumnoProxy::CrearAlumnoProxy(const char *endpoint, soap_mode iomode) : soap(iomode)
{	CrearAlumnoProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

CrearAlumnoProxy::CrearAlumnoProxy(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	CrearAlumnoProxy_init(imode, omode);
}

CrearAlumnoProxy::~CrearAlumnoProxy()
{
	this->destroy();
	}

void CrearAlumnoProxy::CrearAlumnoProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
        {"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"ns1", "urn:CrearAlumno", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

#ifndef WITH_PURE_VIRTUAL
CrearAlumnoProxy *CrearAlumnoProxy::copy()
{	CrearAlumnoProxy *dup = SOAP_NEW_COPY(CrearAlumnoProxy(*(struct soap*)this));
	return dup;
}
#endif

CrearAlumnoProxy& CrearAlumnoProxy::operator=(const CrearAlumnoProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void CrearAlumnoProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void CrearAlumnoProxy::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	CrearAlumnoProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void CrearAlumnoProxy::soap_noheader()
{	this->header = NULL;
}

::SOAP_ENV__Header *CrearAlumnoProxy::soap_header()
{	return this->header;
}

::SOAP_ENV__Fault *CrearAlumnoProxy::soap_fault()
{	return this->fault;
}

const char *CrearAlumnoProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *CrearAlumnoProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int CrearAlumnoProxy::soap_close_socket()
{	return soap_closesock(this);
}

int CrearAlumnoProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void CrearAlumnoProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void CrearAlumnoProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *CrearAlumnoProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int CrearAlumnoProxy::getInfo(const char *endpoint, const char *soap_action, _ns1__getInfo *ns1__getInfo, ns1__getInfoResponse &ns1__getInfoResponse_)
{	struct soap *soap = this;
	struct __ns1__getInfo soap_tmp___ns1__getInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost/cgi-bin/CrearAlumno.cgi";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getInfo.ns1__getInfo = ns1__getInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__getInfo(soap, &soap_tmp___ns1__getInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getInfo(soap, &soap_tmp___ns1__getInfo, "-ns1:getInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getInfo(soap, &soap_tmp___ns1__getInfo, "-ns1:getInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<ns1__getInfoResponse*>(&ns1__getInfoResponse_)) // NULL ref?
		return soap_closesock(soap);
	ns1__getInfoResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getInfoResponse_.soap_get(soap, "ns1:getInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
